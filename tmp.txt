
/*
    { Address : 0xfd22, Label : 'Reset_Handler', Comment : 'KERNAL Starts Here' },
    { Address : 0xfd27, Label : '', Comment : 'check for auto start' },
    { Address : 0xfd2c, Label : '', Comment : 'run cart cartridge' },
    { Address : 0xfd3f, Label : 'auto start check', Comment : '' },
    { Address : 0xfd4c, Label : '', Comment : 'end auto start check' },
    { Address : 0xfd2f, Label : '', Comment : 'zero memory' },
    { Address : 0xfd8d, Label : 'init zero page', Comment : '' },
    
    { Address : 0xC002, Label : 'WARMST', Comment : 'BASIC warm start entry point' },
{ Address : 0xC437, Label : 'ERROR', Comment : 'do error #.X then warm start (via vector)' },
{ Address : 0xC43A, Label : 'ERROR2', Comment : 'do error #.X then warm start' },
{ Address : 0xC483, Label : 'MAIN2', Comment : 'BASIC warm start' },
{ Address : 0xC533, Label : 'LNKPRG', Comment : 'rebuild BASIC line chaining' },
{ Address : 0xC57C, Label : 'CRNCH2', Comment : 'crunch BASIC tokens (via vector)' },
{ Address : 0xC7AE, Label : 'NEWSTT', Comment : 'interpreter inner loop' },
{ Address : 0xC8A0, Label : 'GOTO', Comment : 'perform GOTO' },
{ Address : 0xC93B, Label : 'REM', Comment : 'perform REM' },
{ Address : 0xCD9E, Label : 'FRMEVL', Comment : 'evaluate expression' },
{ Address : 0xCE86, Label : 'FEVAL', Comment : 'get arithmetic element' },
{ Address : 0xCEF7, Label : 'RPACHK', Comment : 'scan for ")"' },
{ Address : 0xCEFA, Label : 'LPACHK', Comment : 'scan for "("' },
{ Address : 0xCEFD, Label : 'COMCHK', Comment : 'scan for ","' },
{ Address : 0xCEFF, Label : 'SYNCHR', Comment : 'scan for CHR$(.A)' },
{ Address : 0xD0E7, Label : 'FNDVAR', Comment : 'either find or create variable' },
{ Address : 0xD4F4, Label : 'ALCSPAC', Comment : 'make space in string memory for string' },
{ Address : 0xD6A3, Label : 'DELST', Comment : 'evaluate string' },
{ Address : 0xD7F7, Label : 'MAKADR', Comment : 'convert FAC1 to integer in temporary integer' },
{ Address : 0xE3A4, Label : 'INITBA', Comment : 'initialize BASIC RAM locations' },
{ Address : 0xE404, Label : 'FREMSG', Comment : 'print start up message' },
{ Address : 0xE4BC, Label : 'PATCH1', Comment : 'get secondary address and print "SEARCHING..."' },
{ Address : 0xE4C1, Label : 'PATCH2', Comment : 'set LOAD address if secondary address = 0' },
{ Address : 0xE518, Label : 'INITSK', Comment : 'initialize hardware' },
{ Address : 0xE742, Label : 'SCRNOUT', Comment : 'output character' },
{ Address : 0xEAAA, Label : 'PUTSCRN', Comment : 'save character and colour to screen @ cursor' },
{ Address : 0xEAB2, Label : 'COLORSYN', Comment : 'calculate pointer to colour RAM' },
{ Address : 0xEABF, Label : 'IRQ', Comment : 'IRQ handler' },
{ Address : 0xEE14, Label : 'FTALK', Comment : 'command a serial bus device to TALK' },
{ Address : 0xEE17, Label : 'FLISTEN', Comment : 'command devices on the serial bus to LISTEN' },
{ Address : 0xEE49, Label : 'SRSEND', Comment : 'Tx byte on serial bus' },
{ Address : 0xEEC0, Label : 'FSECOND', Comment : 'send secondary address after LISTEN' },
{ Address : 0xEEC5, Label : 'SCATN', Comment : 'set serial ATN high' },
{ Address : 0xEECE, Label : 'FTKSA', Comment : 'send secondary address after TALK' },
{ Address : 0xEEF6, Label : 'FUNTLK', Comment : 'command the serial bus to UNTALK' },
{ Address : 0xEF04, Label : 'FUNLSN', Comment : 'command the serial bus to UNLISTEN' },
{ Address : 0xEF19, Label : 'FACPTR', Comment : 'input a byte from the serial bus' },
{ Address : 0xF0ED, Label : 'RSOUTSAV', Comment : 'send byte to RS-232 buffer' },
{ Address : 0xF14F, Label : 'RSNXTIN', Comment : 'get byte from RS-232 buffer' },
{ Address : 0xF1F5, Label : 'FGETIN', Comment : 'get a character from the input device' },
{ Address : 0xF20E, Label : 'FCHRIN', Comment : 'input character from channel' },
{ Address : 0xF27A, Label : 'FCHROUT', Comment : 'output a character to channel' },
{ Address : 0xF3CF, Label : 'FNDFLNO', Comment : 'find file' },
{ Address : 0xF3DF, Label : 'SETFLCH', Comment : 'set file details from table,.X' },
{ Address : 0xF3EF, Label : 'FCLALL', Comment : 'close all channels and files' },
{ Address : 0xF3F3, Label : 'FCLRCHN', Comment : 'close input and output channels' },
{ Address : 0xF495, Label : 'SERNAME', Comment : 'send secondary address and filename' },
{ Address : 0xF685, Label : 'FSAVE2', Comment : 'save' },
{ Address : 0xF734, Label : 'FUDTIM', Comment : 'increment real time clock' },
{ Address : 0xF770, Label : 'FSTOP', Comment : 'scan stop key' },
{ Address : 0xF77E, Label : 'FE_2MNYF', Comment : 'display too many files' },
{ Address : 0xF781, Label : 'FE_ALOPN', Comment : 'display file already open' },
{ Address : 0xF784, Label : 'FE_NTOPN', Comment : 'display file not open' },
{ Address : 0xF787, Label : 'FE_NTFND', Comment : 'display file not found' },
{ Address : 0xF78A, Label : 'FE_DVNTP', Comment : 'display device not present' },
{ Address : 0xF78D, Label : 'FE_NTINP', Comment : 'display not input file' },
{ Address : 0xF793, Label : 'FE_MISFN', Comment : 'display missing file name' },
{ Address : 0xFBD2, Label : 'RD300', Comment : 'copy I/O start address to buffer address' },
{ Address : 0xFD11, Label : 'VPRTY', Comment : 'check read/write pointer' },
{ Address : 0xFD1B, Label : 'WRT62', Comment : 'increment read/write pointer' },
{ Address : 0xFD8D, Label : 'INITMEM', Comment : 'initialize and test RAM' },
{ Address : 0xFDF9, Label : 'INITVIA', Comment : 'initialize I/O registers' },
{ Address : 0xFE6A, Label : 'ORIOST', Comment : 'OR into I/O status byte' },
{ Address : 0xFEAD, Label : 'NMI2', Comment : 'NMI handler' },
{ Address : 0xFED2, Label : 'BREAK', Comment : 'BRK handler' },
{ Address : 0xFF9F, Label : 'SCNKEY', Comment : 'scan the keyboard' },
{ Address : 0xFFC3, Label : 'CLOSE', Comment : 'close a specified logical file (via vector)' },
{ Address : 0xFFCC, Label : 'CLRCHN', Comment : 'close input and output channels (via vector)' },
{ Address : 0xFFCF, Label : 'CHRIN', Comment : 'input character from channel (via vector)' },
{ Address : 0xFFD2, Label : 'CHROUT', Comment : 'output character to channel (via vector)' },
{ Address : 0xFFD5, Label : 'LOAD', Comment : 'load RAM from a device (via vector)' },
{ Address : 0xFFE1, Label : 'STOP', Comment : 'scan stop key (via vector)' }


    */